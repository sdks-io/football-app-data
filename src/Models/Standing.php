<?php

declare(strict_types=1);

/*
 * SoccerV3ScoresLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SoccerV3ScoresLib\Models;

use stdClass;

class Standing implements \JsonSerializable
{
    /**
     * @var int|null
     */
    private $standingId;

    /**
     * @var int|null
     */
    private $roundId;

    /**
     * @var int|null
     */
    private $teamId;

    /**
     * @var string|null
     */
    private $name;

    /**
     * @var string|null
     */
    private $shortName;

    /**
     * @var string|null
     */
    private $scope;

    /**
     * @var int|null
     */
    private $order;

    /**
     * @var int|null
     */
    private $games;

    /**
     * @var int|null
     */
    private $wins;

    /**
     * @var int|null
     */
    private $losses;

    /**
     * @var int|null
     */
    private $draws;

    /**
     * @var int|null
     */
    private $goalsScored;

    /**
     * @var int|null
     */
    private $goalsAgainst;

    /**
     * @var int|null
     */
    private $goalsDifferential;

    /**
     * @var int|null
     */
    private $points;

    /**
     * @var string|null
     */
    private $group;

    /**
     * @var int|null
     */
    private $globalTeamID;

    /**
     * Returns Standing Id.
     */
    public function getStandingId(): ?int
    {
        return $this->standingId;
    }

    /**
     * Sets Standing Id.
     *
     * @maps StandingId
     */
    public function setStandingId(?int $standingId): void
    {
        $this->standingId = $standingId;
    }

    /**
     * Returns Round Id.
     */
    public function getRoundId(): ?int
    {
        return $this->roundId;
    }

    /**
     * Sets Round Id.
     *
     * @maps RoundId
     */
    public function setRoundId(?int $roundId): void
    {
        $this->roundId = $roundId;
    }

    /**
     * Returns Team Id.
     */
    public function getTeamId(): ?int
    {
        return $this->teamId;
    }

    /**
     * Sets Team Id.
     *
     * @maps TeamId
     */
    public function setTeamId(?int $teamId): void
    {
        $this->teamId = $teamId;
    }

    /**
     * Returns Name.
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     *
     * @maps Name
     */
    public function setName(?string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Short Name.
     */
    public function getShortName(): ?string
    {
        return $this->shortName;
    }

    /**
     * Sets Short Name.
     *
     * @maps ShortName
     */
    public function setShortName(?string $shortName): void
    {
        $this->shortName = $shortName;
    }

    /**
     * Returns Scope.
     */
    public function getScope(): ?string
    {
        return $this->scope;
    }

    /**
     * Sets Scope.
     *
     * @maps Scope
     */
    public function setScope(?string $scope): void
    {
        $this->scope = $scope;
    }

    /**
     * Returns Order.
     */
    public function getOrder(): ?int
    {
        return $this->order;
    }

    /**
     * Sets Order.
     *
     * @maps Order
     */
    public function setOrder(?int $order): void
    {
        $this->order = $order;
    }

    /**
     * Returns Games.
     */
    public function getGames(): ?int
    {
        return $this->games;
    }

    /**
     * Sets Games.
     *
     * @maps Games
     */
    public function setGames(?int $games): void
    {
        $this->games = $games;
    }

    /**
     * Returns Wins.
     */
    public function getWins(): ?int
    {
        return $this->wins;
    }

    /**
     * Sets Wins.
     *
     * @maps Wins
     */
    public function setWins(?int $wins): void
    {
        $this->wins = $wins;
    }

    /**
     * Returns Losses.
     */
    public function getLosses(): ?int
    {
        return $this->losses;
    }

    /**
     * Sets Losses.
     *
     * @maps Losses
     */
    public function setLosses(?int $losses): void
    {
        $this->losses = $losses;
    }

    /**
     * Returns Draws.
     */
    public function getDraws(): ?int
    {
        return $this->draws;
    }

    /**
     * Sets Draws.
     *
     * @maps Draws
     */
    public function setDraws(?int $draws): void
    {
        $this->draws = $draws;
    }

    /**
     * Returns Goals Scored.
     */
    public function getGoalsScored(): ?int
    {
        return $this->goalsScored;
    }

    /**
     * Sets Goals Scored.
     *
     * @maps GoalsScored
     */
    public function setGoalsScored(?int $goalsScored): void
    {
        $this->goalsScored = $goalsScored;
    }

    /**
     * Returns Goals Against.
     */
    public function getGoalsAgainst(): ?int
    {
        return $this->goalsAgainst;
    }

    /**
     * Sets Goals Against.
     *
     * @maps GoalsAgainst
     */
    public function setGoalsAgainst(?int $goalsAgainst): void
    {
        $this->goalsAgainst = $goalsAgainst;
    }

    /**
     * Returns Goals Differential.
     */
    public function getGoalsDifferential(): ?int
    {
        return $this->goalsDifferential;
    }

    /**
     * Sets Goals Differential.
     *
     * @maps GoalsDifferential
     */
    public function setGoalsDifferential(?int $goalsDifferential): void
    {
        $this->goalsDifferential = $goalsDifferential;
    }

    /**
     * Returns Points.
     */
    public function getPoints(): ?int
    {
        return $this->points;
    }

    /**
     * Sets Points.
     *
     * @maps Points
     */
    public function setPoints(?int $points): void
    {
        $this->points = $points;
    }

    /**
     * Returns Group.
     */
    public function getGroup(): ?string
    {
        return $this->group;
    }

    /**
     * Sets Group.
     *
     * @maps Group
     */
    public function setGroup(?string $group): void
    {
        $this->group = $group;
    }

    /**
     * Returns Global Team ID.
     */
    public function getGlobalTeamID(): ?int
    {
        return $this->globalTeamID;
    }

    /**
     * Sets Global Team ID.
     *
     * @maps GlobalTeamID
     */
    public function setGlobalTeamID(?int $globalTeamID): void
    {
        $this->globalTeamID = $globalTeamID;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->standingId)) {
            $json['StandingId']        = $this->standingId;
        }
        if (isset($this->roundId)) {
            $json['RoundId']           = $this->roundId;
        }
        if (isset($this->teamId)) {
            $json['TeamId']            = $this->teamId;
        }
        if (isset($this->name)) {
            $json['Name']              = $this->name;
        }
        if (isset($this->shortName)) {
            $json['ShortName']         = $this->shortName;
        }
        if (isset($this->scope)) {
            $json['Scope']             = $this->scope;
        }
        if (isset($this->order)) {
            $json['Order']             = $this->order;
        }
        if (isset($this->games)) {
            $json['Games']             = $this->games;
        }
        if (isset($this->wins)) {
            $json['Wins']              = $this->wins;
        }
        if (isset($this->losses)) {
            $json['Losses']            = $this->losses;
        }
        if (isset($this->draws)) {
            $json['Draws']             = $this->draws;
        }
        if (isset($this->goalsScored)) {
            $json['GoalsScored']       = $this->goalsScored;
        }
        if (isset($this->goalsAgainst)) {
            $json['GoalsAgainst']      = $this->goalsAgainst;
        }
        if (isset($this->goalsDifferential)) {
            $json['GoalsDifferential'] = $this->goalsDifferential;
        }
        if (isset($this->points)) {
            $json['Points']            = $this->points;
        }
        if (isset($this->group)) {
            $json['Group']             = $this->group;
        }
        if (isset($this->globalTeamID)) {
            $json['GlobalTeamID']      = $this->globalTeamID;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
