<?php

declare(strict_types=1);

/*
 * SoccerV3ScoresLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SoccerV3ScoresLib\Models\Builders;

use Core\Utils\CoreHelper;
use SoccerV3ScoresLib\Models\Season;

/**
 * Builder for model Season
 *
 * @see Season
 */
class SeasonBuilder
{
    /**
     * @var Season
     */
    private $instance;

    private function __construct(Season $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new season Builder object.
     */
    public static function init(): self
    {
        return new self(new Season());
    }

    /**
     * Sets season id field.
     */
    public function seasonId(?int $value): self
    {
        $this->instance->setSeasonId($value);
        return $this;
    }

    /**
     * Sets competition id field.
     */
    public function competitionId(?int $value): self
    {
        $this->instance->setCompetitionId($value);
        return $this;
    }

    /**
     * Sets season field.
     */
    public function season(?int $value): self
    {
        $this->instance->setSeason($value);
        return $this;
    }

    /**
     * Sets name field.
     */
    public function name(?string $value): self
    {
        $this->instance->setName($value);
        return $this;
    }

    /**
     * Sets competition name field.
     */
    public function competitionName(?string $value): self
    {
        $this->instance->setCompetitionName($value);
        return $this;
    }

    /**
     * Sets start date field.
     */
    public function startDate(?string $value): self
    {
        $this->instance->setStartDate($value);
        return $this;
    }

    /**
     * Sets end date field.
     */
    public function endDate(?string $value): self
    {
        $this->instance->setEndDate($value);
        return $this;
    }

    /**
     * Sets current season field.
     */
    public function currentSeason(?bool $value): self
    {
        $this->instance->setCurrentSeason($value);
        return $this;
    }

    /**
     * Sets rounds field.
     */
    public function rounds(?array $value): self
    {
        $this->instance->setRounds($value);
        return $this;
    }

    /**
     * Initializes a new season object.
     */
    public function build(): Season
    {
        return CoreHelper::clone($this->instance);
    }
}
