<?php

declare(strict_types=1);

/*
 * SoccerV3ScoresLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SoccerV3ScoresLib\Models\Builders;

use Core\Utils\CoreHelper;
use SoccerV3ScoresLib\Models\Venue;

/**
 * Builder for model Venue
 *
 * @see Venue
 */
class VenueBuilder
{
    /**
     * @var Venue
     */
    private $instance;

    private function __construct(Venue $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new venue Builder object.
     */
    public static function init(): self
    {
        return new self(new Venue());
    }

    /**
     * Sets venue id field.
     */
    public function venueId(?int $value): self
    {
        $this->instance->setVenueId($value);
        return $this;
    }

    /**
     * Sets name field.
     */
    public function name(?string $value): self
    {
        $this->instance->setName($value);
        return $this;
    }

    /**
     * Sets address field.
     */
    public function address(?string $value): self
    {
        $this->instance->setAddress($value);
        return $this;
    }

    /**
     * Sets city field.
     */
    public function city(?string $value): self
    {
        $this->instance->setCity($value);
        return $this;
    }

    /**
     * Sets zip field.
     */
    public function zip(?string $value): self
    {
        $this->instance->setZip($value);
        return $this;
    }

    /**
     * Sets country field.
     */
    public function country(?string $value): self
    {
        $this->instance->setCountry($value);
        return $this;
    }

    /**
     * Sets open field.
     */
    public function open(?bool $value): self
    {
        $this->instance->setOpen($value);
        return $this;
    }

    /**
     * Sets opened field.
     */
    public function opened(?int $value): self
    {
        $this->instance->setOpened($value);
        return $this;
    }

    /**
     * Sets nickname 1 field.
     */
    public function nickname1(?string $value): self
    {
        $this->instance->setNickname1($value);
        return $this;
    }

    /**
     * Sets nickname 2 field.
     */
    public function nickname2(?string $value): self
    {
        $this->instance->setNickname2($value);
        return $this;
    }

    /**
     * Sets capacity field.
     */
    public function capacity(?int $value): self
    {
        $this->instance->setCapacity($value);
        return $this;
    }

    /**
     * Sets surface field.
     */
    public function surface(?string $value): self
    {
        $this->instance->setSurface($value);
        return $this;
    }

    /**
     * Sets geo lat field.
     */
    public function geoLat(?float $value): self
    {
        $this->instance->setGeoLat($value);
        return $this;
    }

    /**
     * Sets geo long field.
     */
    public function geoLong(?float $value): self
    {
        $this->instance->setGeoLong($value);
        return $this;
    }

    /**
     * Initializes a new venue object.
     */
    public function build(): Venue
    {
        return CoreHelper::clone($this->instance);
    }
}
