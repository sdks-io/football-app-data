<?php

declare(strict_types=1);

/*
 * SoccerV3ScoresLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SoccerV3ScoresLib\Models;

use stdClass;

class Season implements \JsonSerializable
{
    /**
     * @var int|null
     */
    private $seasonId;

    /**
     * @var int|null
     */
    private $competitionId;

    /**
     * @var int|null
     */
    private $season;

    /**
     * @var string|null
     */
    private $name;

    /**
     * @var string|null
     */
    private $competitionName;

    /**
     * @var string|null
     */
    private $startDate;

    /**
     * @var string|null
     */
    private $endDate;

    /**
     * @var bool|null
     */
    private $currentSeason;

    /**
     * @var Round[]|null
     */
    private $rounds;

    /**
     * Returns Season Id.
     */
    public function getSeasonId(): ?int
    {
        return $this->seasonId;
    }

    /**
     * Sets Season Id.
     *
     * @maps SeasonId
     */
    public function setSeasonId(?int $seasonId): void
    {
        $this->seasonId = $seasonId;
    }

    /**
     * Returns Competition Id.
     */
    public function getCompetitionId(): ?int
    {
        return $this->competitionId;
    }

    /**
     * Sets Competition Id.
     *
     * @maps CompetitionId
     */
    public function setCompetitionId(?int $competitionId): void
    {
        $this->competitionId = $competitionId;
    }

    /**
     * Returns Season.
     */
    public function getSeason(): ?int
    {
        return $this->season;
    }

    /**
     * Sets Season.
     *
     * @maps Season
     */
    public function setSeason(?int $season): void
    {
        $this->season = $season;
    }

    /**
     * Returns Name.
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     *
     * @maps Name
     */
    public function setName(?string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Competition Name.
     */
    public function getCompetitionName(): ?string
    {
        return $this->competitionName;
    }

    /**
     * Sets Competition Name.
     *
     * @maps CompetitionName
     */
    public function setCompetitionName(?string $competitionName): void
    {
        $this->competitionName = $competitionName;
    }

    /**
     * Returns Start Date.
     */
    public function getStartDate(): ?string
    {
        return $this->startDate;
    }

    /**
     * Sets Start Date.
     *
     * @maps StartDate
     */
    public function setStartDate(?string $startDate): void
    {
        $this->startDate = $startDate;
    }

    /**
     * Returns End Date.
     */
    public function getEndDate(): ?string
    {
        return $this->endDate;
    }

    /**
     * Sets End Date.
     *
     * @maps EndDate
     */
    public function setEndDate(?string $endDate): void
    {
        $this->endDate = $endDate;
    }

    /**
     * Returns Current Season.
     */
    public function getCurrentSeason(): ?bool
    {
        return $this->currentSeason;
    }

    /**
     * Sets Current Season.
     *
     * @maps CurrentSeason
     */
    public function setCurrentSeason(?bool $currentSeason): void
    {
        $this->currentSeason = $currentSeason;
    }

    /**
     * Returns Rounds.
     *
     * @return Round[]|null
     */
    public function getRounds(): ?array
    {
        return $this->rounds;
    }

    /**
     * Sets Rounds.
     *
     * @maps Rounds
     *
     * @param Round[]|null $rounds
     */
    public function setRounds(?array $rounds): void
    {
        $this->rounds = $rounds;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->seasonId)) {
            $json['SeasonId']        = $this->seasonId;
        }
        if (isset($this->competitionId)) {
            $json['CompetitionId']   = $this->competitionId;
        }
        if (isset($this->season)) {
            $json['Season']          = $this->season;
        }
        if (isset($this->name)) {
            $json['Name']            = $this->name;
        }
        if (isset($this->competitionName)) {
            $json['CompetitionName'] = $this->competitionName;
        }
        if (isset($this->startDate)) {
            $json['StartDate']       = $this->startDate;
        }
        if (isset($this->endDate)) {
            $json['EndDate']         = $this->endDate;
        }
        if (isset($this->currentSeason)) {
            $json['CurrentSeason']   = $this->currentSeason;
        }
        if (isset($this->rounds)) {
            $json['Rounds']          = $this->rounds;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
