<?php

declare(strict_types=1);

/*
 * SoccerV3ScoresLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SoccerV3ScoresLib\Models;

use stdClass;

class CompetitionDetail implements \JsonSerializable
{
    /**
     * @var Season|null
     */
    private $currentSeason;

    /**
     * @var TeamDetail[]|null
     */
    private $teams;

    /**
     * @var Game[]|null
     */
    private $games;

    /**
     * @var int|null
     */
    private $competitionId;

    /**
     * @var int|null
     */
    private $areaId;

    /**
     * @var string|null
     */
    private $areaName;

    /**
     * @var string|null
     */
    private $name;

    /**
     * @var string|null
     */
    private $gender;

    /**
     * @var string|null
     */
    private $type;

    /**
     * @var string|null
     */
    private $format;

    /**
     * @var Season[]|null
     */
    private $seasons;

    /**
     * @var string|null
     */
    private $key;

    /**
     * Returns Current Season.
     */
    public function getCurrentSeason(): ?Season
    {
        return $this->currentSeason;
    }

    /**
     * Sets Current Season.
     *
     * @maps CurrentSeason
     */
    public function setCurrentSeason(?Season $currentSeason): void
    {
        $this->currentSeason = $currentSeason;
    }

    /**
     * Returns Teams.
     *
     * @return TeamDetail[]|null
     */
    public function getTeams(): ?array
    {
        return $this->teams;
    }

    /**
     * Sets Teams.
     *
     * @maps Teams
     *
     * @param TeamDetail[]|null $teams
     */
    public function setTeams(?array $teams): void
    {
        $this->teams = $teams;
    }

    /**
     * Returns Games.
     *
     * @return Game[]|null
     */
    public function getGames(): ?array
    {
        return $this->games;
    }

    /**
     * Sets Games.
     *
     * @maps Games
     *
     * @param Game[]|null $games
     */
    public function setGames(?array $games): void
    {
        $this->games = $games;
    }

    /**
     * Returns Competition Id.
     */
    public function getCompetitionId(): ?int
    {
        return $this->competitionId;
    }

    /**
     * Sets Competition Id.
     *
     * @maps CompetitionId
     */
    public function setCompetitionId(?int $competitionId): void
    {
        $this->competitionId = $competitionId;
    }

    /**
     * Returns Area Id.
     */
    public function getAreaId(): ?int
    {
        return $this->areaId;
    }

    /**
     * Sets Area Id.
     *
     * @maps AreaId
     */
    public function setAreaId(?int $areaId): void
    {
        $this->areaId = $areaId;
    }

    /**
     * Returns Area Name.
     */
    public function getAreaName(): ?string
    {
        return $this->areaName;
    }

    /**
     * Sets Area Name.
     *
     * @maps AreaName
     */
    public function setAreaName(?string $areaName): void
    {
        $this->areaName = $areaName;
    }

    /**
     * Returns Name.
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     *
     * @maps Name
     */
    public function setName(?string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Gender.
     */
    public function getGender(): ?string
    {
        return $this->gender;
    }

    /**
     * Sets Gender.
     *
     * @maps Gender
     */
    public function setGender(?string $gender): void
    {
        $this->gender = $gender;
    }

    /**
     * Returns Type.
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
     * Sets Type.
     *
     * @maps Type
     */
    public function setType(?string $type): void
    {
        $this->type = $type;
    }

    /**
     * Returns Format.
     */
    public function getFormat(): ?string
    {
        return $this->format;
    }

    /**
     * Sets Format.
     *
     * @maps Format
     */
    public function setFormat(?string $format): void
    {
        $this->format = $format;
    }

    /**
     * Returns Seasons.
     *
     * @return Season[]|null
     */
    public function getSeasons(): ?array
    {
        return $this->seasons;
    }

    /**
     * Sets Seasons.
     *
     * @maps Seasons
     *
     * @param Season[]|null $seasons
     */
    public function setSeasons(?array $seasons): void
    {
        $this->seasons = $seasons;
    }

    /**
     * Returns Key.
     */
    public function getKey(): ?string
    {
        return $this->key;
    }

    /**
     * Sets Key.
     *
     * @maps Key
     */
    public function setKey(?string $key): void
    {
        $this->key = $key;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->currentSeason)) {
            $json['CurrentSeason'] = $this->currentSeason;
        }
        if (isset($this->teams)) {
            $json['Teams']         = $this->teams;
        }
        if (isset($this->games)) {
            $json['Games']         = $this->games;
        }
        if (isset($this->competitionId)) {
            $json['CompetitionId'] = $this->competitionId;
        }
        if (isset($this->areaId)) {
            $json['AreaId']        = $this->areaId;
        }
        if (isset($this->areaName)) {
            $json['AreaName']      = $this->areaName;
        }
        if (isset($this->name)) {
            $json['Name']          = $this->name;
        }
        if (isset($this->gender)) {
            $json['Gender']        = $this->gender;
        }
        if (isset($this->type)) {
            $json['Type']          = $this->type;
        }
        if (isset($this->format)) {
            $json['Format']        = $this->format;
        }
        if (isset($this->seasons)) {
            $json['Seasons']       = $this->seasons;
        }
        if (isset($this->key)) {
            $json['Key']           = $this->key;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
