<?php

declare(strict_types=1);

/*
 * SoccerV3ScoresLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SoccerV3ScoresLib\Models;

use stdClass;

class SeasonTeam implements \JsonSerializable
{
    /**
     * @var int|null
     */
    private $seasonTeamId;

    /**
     * @var int|null
     */
    private $seasonId;

    /**
     * @var int|null
     */
    private $teamId;

    /**
     * @var string|null
     */
    private $teamName;

    /**
     * @var bool|null
     */
    private $active;

    /**
     * @var string|null
     */
    private $gender;

    /**
     * @var string|null
     */
    private $type;

    /**
     * @var Team|null
     */
    private $team;

    /**
     * Returns Season Team Id.
     */
    public function getSeasonTeamId(): ?int
    {
        return $this->seasonTeamId;
    }

    /**
     * Sets Season Team Id.
     *
     * @maps SeasonTeamId
     */
    public function setSeasonTeamId(?int $seasonTeamId): void
    {
        $this->seasonTeamId = $seasonTeamId;
    }

    /**
     * Returns Season Id.
     */
    public function getSeasonId(): ?int
    {
        return $this->seasonId;
    }

    /**
     * Sets Season Id.
     *
     * @maps SeasonId
     */
    public function setSeasonId(?int $seasonId): void
    {
        $this->seasonId = $seasonId;
    }

    /**
     * Returns Team Id.
     */
    public function getTeamId(): ?int
    {
        return $this->teamId;
    }

    /**
     * Sets Team Id.
     *
     * @maps TeamId
     */
    public function setTeamId(?int $teamId): void
    {
        $this->teamId = $teamId;
    }

    /**
     * Returns Team Name.
     */
    public function getTeamName(): ?string
    {
        return $this->teamName;
    }

    /**
     * Sets Team Name.
     *
     * @maps TeamName
     */
    public function setTeamName(?string $teamName): void
    {
        $this->teamName = $teamName;
    }

    /**
     * Returns Active.
     */
    public function getActive(): ?bool
    {
        return $this->active;
    }

    /**
     * Sets Active.
     *
     * @maps Active
     */
    public function setActive(?bool $active): void
    {
        $this->active = $active;
    }

    /**
     * Returns Gender.
     */
    public function getGender(): ?string
    {
        return $this->gender;
    }

    /**
     * Sets Gender.
     *
     * @maps Gender
     */
    public function setGender(?string $gender): void
    {
        $this->gender = $gender;
    }

    /**
     * Returns Type.
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
     * Sets Type.
     *
     * @maps Type
     */
    public function setType(?string $type): void
    {
        $this->type = $type;
    }

    /**
     * Returns Team.
     */
    public function getTeam(): ?Team
    {
        return $this->team;
    }

    /**
     * Sets Team.
     *
     * @maps Team
     */
    public function setTeam(?Team $team): void
    {
        $this->team = $team;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->seasonTeamId)) {
            $json['SeasonTeamId'] = $this->seasonTeamId;
        }
        if (isset($this->seasonId)) {
            $json['SeasonId']     = $this->seasonId;
        }
        if (isset($this->teamId)) {
            $json['TeamId']       = $this->teamId;
        }
        if (isset($this->teamName)) {
            $json['TeamName']     = $this->teamName;
        }
        if (isset($this->active)) {
            $json['Active']       = $this->active;
        }
        if (isset($this->gender)) {
            $json['Gender']       = $this->gender;
        }
        if (isset($this->type)) {
            $json['Type']         = $this->type;
        }
        if (isset($this->team)) {
            $json['Team']         = $this->team;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
