<?php

declare(strict_types=1);

/*
 * SoccerV3ScoresLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace SoccerV3ScoresLib\Models;

use stdClass;

class Round implements \JsonSerializable
{
    /**
     * @var int|null
     */
    private $roundId;

    /**
     * @var int|null
     */
    private $seasonId;

    /**
     * @var int|null
     */
    private $season;

    /**
     * @var int|null
     */
    private $seasonType;

    /**
     * @var string|null
     */
    private $name;

    /**
     * @var string|null
     */
    private $type;

    /**
     * @var string|null
     */
    private $startDate;

    /**
     * @var string|null
     */
    private $endDate;

    /**
     * @var int|null
     */
    private $currentWeek;

    /**
     * @var bool|null
     */
    private $currentRound;

    /**
     * @var Game[]|null
     */
    private $games;

    /**
     * @var Standing[]|null
     */
    private $standings;

    /**
     * @var TeamSeason[]|null
     */
    private $teamSeasons;

    /**
     * @var PlayerSeason[]|null
     */
    private $playerSeasons;

    /**
     * Returns Round Id.
     */
    public function getRoundId(): ?int
    {
        return $this->roundId;
    }

    /**
     * Sets Round Id.
     *
     * @maps RoundId
     */
    public function setRoundId(?int $roundId): void
    {
        $this->roundId = $roundId;
    }

    /**
     * Returns Season Id.
     */
    public function getSeasonId(): ?int
    {
        return $this->seasonId;
    }

    /**
     * Sets Season Id.
     *
     * @maps SeasonId
     */
    public function setSeasonId(?int $seasonId): void
    {
        $this->seasonId = $seasonId;
    }

    /**
     * Returns Season.
     */
    public function getSeason(): ?int
    {
        return $this->season;
    }

    /**
     * Sets Season.
     *
     * @maps Season
     */
    public function setSeason(?int $season): void
    {
        $this->season = $season;
    }

    /**
     * Returns Season Type.
     */
    public function getSeasonType(): ?int
    {
        return $this->seasonType;
    }

    /**
     * Sets Season Type.
     *
     * @maps SeasonType
     */
    public function setSeasonType(?int $seasonType): void
    {
        $this->seasonType = $seasonType;
    }

    /**
     * Returns Name.
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     *
     * @maps Name
     */
    public function setName(?string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Type.
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
     * Sets Type.
     *
     * @maps Type
     */
    public function setType(?string $type): void
    {
        $this->type = $type;
    }

    /**
     * Returns Start Date.
     */
    public function getStartDate(): ?string
    {
        return $this->startDate;
    }

    /**
     * Sets Start Date.
     *
     * @maps StartDate
     */
    public function setStartDate(?string $startDate): void
    {
        $this->startDate = $startDate;
    }

    /**
     * Returns End Date.
     */
    public function getEndDate(): ?string
    {
        return $this->endDate;
    }

    /**
     * Sets End Date.
     *
     * @maps EndDate
     */
    public function setEndDate(?string $endDate): void
    {
        $this->endDate = $endDate;
    }

    /**
     * Returns Current Week.
     */
    public function getCurrentWeek(): ?int
    {
        return $this->currentWeek;
    }

    /**
     * Sets Current Week.
     *
     * @maps CurrentWeek
     */
    public function setCurrentWeek(?int $currentWeek): void
    {
        $this->currentWeek = $currentWeek;
    }

    /**
     * Returns Current Round.
     */
    public function getCurrentRound(): ?bool
    {
        return $this->currentRound;
    }

    /**
     * Sets Current Round.
     *
     * @maps CurrentRound
     */
    public function setCurrentRound(?bool $currentRound): void
    {
        $this->currentRound = $currentRound;
    }

    /**
     * Returns Games.
     *
     * @return Game[]|null
     */
    public function getGames(): ?array
    {
        return $this->games;
    }

    /**
     * Sets Games.
     *
     * @maps Games
     *
     * @param Game[]|null $games
     */
    public function setGames(?array $games): void
    {
        $this->games = $games;
    }

    /**
     * Returns Standings.
     *
     * @return Standing[]|null
     */
    public function getStandings(): ?array
    {
        return $this->standings;
    }

    /**
     * Sets Standings.
     *
     * @maps Standings
     *
     * @param Standing[]|null $standings
     */
    public function setStandings(?array $standings): void
    {
        $this->standings = $standings;
    }

    /**
     * Returns Team Seasons.
     *
     * @return TeamSeason[]|null
     */
    public function getTeamSeasons(): ?array
    {
        return $this->teamSeasons;
    }

    /**
     * Sets Team Seasons.
     *
     * @maps TeamSeasons
     *
     * @param TeamSeason[]|null $teamSeasons
     */
    public function setTeamSeasons(?array $teamSeasons): void
    {
        $this->teamSeasons = $teamSeasons;
    }

    /**
     * Returns Player Seasons.
     *
     * @return PlayerSeason[]|null
     */
    public function getPlayerSeasons(): ?array
    {
        return $this->playerSeasons;
    }

    /**
     * Sets Player Seasons.
     *
     * @maps PlayerSeasons
     *
     * @param PlayerSeason[]|null $playerSeasons
     */
    public function setPlayerSeasons(?array $playerSeasons): void
    {
        $this->playerSeasons = $playerSeasons;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->roundId)) {
            $json['RoundId']       = $this->roundId;
        }
        if (isset($this->seasonId)) {
            $json['SeasonId']      = $this->seasonId;
        }
        if (isset($this->season)) {
            $json['Season']        = $this->season;
        }
        if (isset($this->seasonType)) {
            $json['SeasonType']    = $this->seasonType;
        }
        if (isset($this->name)) {
            $json['Name']          = $this->name;
        }
        if (isset($this->type)) {
            $json['Type']          = $this->type;
        }
        if (isset($this->startDate)) {
            $json['StartDate']     = $this->startDate;
        }
        if (isset($this->endDate)) {
            $json['EndDate']       = $this->endDate;
        }
        if (isset($this->currentWeek)) {
            $json['CurrentWeek']   = $this->currentWeek;
        }
        if (isset($this->currentRound)) {
            $json['CurrentRound']  = $this->currentRound;
        }
        if (isset($this->games)) {
            $json['Games']         = $this->games;
        }
        if (isset($this->standings)) {
            $json['Standings']     = $this->standings;
        }
        if (isset($this->teamSeasons)) {
            $json['TeamSeasons']   = $this->teamSeasons;
        }
        if (isset($this->playerSeasons)) {
            $json['PlayerSeasons'] = $this->playerSeasons;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
